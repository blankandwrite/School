apply plugin: 'com.android.application'

android {
    compileSdkVersion 27
    defaultConfig {
        applicationId "aqtc.gl.school"
        minSdkVersion 19
        targetSdkVersion 27
        versionCode 1
        versionName "1.0"
        flavorDimensions "1"
        multiDexEnabled = true
        manifestPlaceholders = [UMENG_CHANNEL_VALUE: "umeng"]//添加一个默认渠道号

    }

    signingConfigs {
        release {
            keyAlias 'glgod'
            keyPassword 'aqtc9a131'
            storeFile file('../signkey/gl.jks')
            storePassword 'aqtc9a131'
        }
        debug {
            keyAlias 'glgod'
            keyPassword 'aqtc9a131'
            storeFile file('../signkey/gl.jks')
            storePassword 'aqtc9a131'
        }
    }

    buildTypes {

        debug {
            //    shrinkResources true // 移除无用的resource文件minifyEnabled=true可用
            minifyEnabled false //不启用混淆
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro',
                    'proguard-fresco.pro'
            //签名配置
            signingConfig signingConfigs.debug
        }
        release {
            //  shrinkResources true // 移除无用的resource文件minifyEnabled=true可用
            minifyEnabled false //不启用混淆
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            //签名配置
            signingConfig signingConfigs.release
        }
    }

    //多渠道打包支持
    productFlavors {
        Alpha {//自己打包测试使用
            //     manifestPlaceholders = [UMENG_CHANNEL_VALUE: Alpha]
        }
        Tencent {//投放应用宝市场
            //     manifestPlaceholders = [UMENG_CHANNEL_VALUE: Tencent]
        }
        /* Baidu {//投放百度市场
             //     manifestPlaceholders = [UMENG_CHANNEL_VALUE: Baidu]
         }
         Wandoujia {//投放豌豆荚市场
             //     manifestPlaceholders = [UMENG_CHANNEL_VALUE: Wandoujia]
         }
         PP {//投放PP助手市场
             //     manifestPlaceholders = [UMENG_CHANNEL_VALUE: PP]
         }
         Qihoo {//投放PP助手市场
             //     manifestPlaceholders = [UMENG_CHANNEL_VALUE: Qihoo]
         }
         Vivo {//投放vivo市场
             //     manifestPlaceholders = [UMENG_CHANNEL_VALUE: Vivo]
         }
         Oppo {//投放oppo市场
             //     manifestPlaceholders = [UMENG_CHANNEL_VALUE: Oppo]
         }
         Xiaomi {//投放小米市场
             //     manifestPlaceholders = [UMENG_CHANNEL_VALUE: Xiaomi]
         }
         Meizu {//投放魅族市场
             //     manifestPlaceholders = [UMENG_CHANNEL_VALUE: Meizu]
         }
         Huawei {//投放华为应用市场
             //     manifestPlaceholders = [UMENG_CHANNEL_VALUE: Huawei]
         }
         Lenovo {//投放联想市场
             //     manifestPlaceholders = [UMENG_CHANNEL_VALUE: Lenovo]
         }
         Letv {//投放乐视市场
             //     manifestPlaceholders = [UMENG_CHANNEL_VALUE: Letv]
         }
         Gionee {//投放金立市场
             //     manifestPlaceholders = [UMENG_CHANNEL_VALUE: Gionee]
         }
         HiMarket {//投放安卓市场
             //     manifestPlaceholders = [UMENG_CHANNEL_VALUE: HiMarket]
         }*/

    }
    //注意我注释掉的，可以去掉注释，那样的话，下面这句就可以不用了
    productFlavors.all {
        flavor -> flavor.manifestPlaceholders = [UMENG_CHANNEL_VALUE: name]
    }

    //指定打包后应用名称
    applicationVariants.all { variant ->
        variant.outputs.all { output ->  // each 改为 all
            def fileName = "aqtc_${defaultConfig.versionCode}_${defaultConfig.versionName}_${releaseTime()}.apk"
            def outFile = output.outputFile
            if (outFile != null && outFile.name.endsWith('.apk')) {
                outputFileName = fileName  //  output.outputFile 改为 outputFileName
            }
        }
    }

    sourceSets {
        main {
            assets.srcDirs = ['assets']
        }

        debug.setRoot('build-types/debug')
        release.setRoot('build-types/release')

    }
}


repositories {
    maven { url "https://jitpack.io" }
}
//让所有模块都用相同的支持库版本。
configurations.all {
    resolutionStrategy.eachDependency { DependencyResolveDetails details ->
        def requested = details.requested
        if (requested.group == 'com.android.support') {
            if (!requested.name.startsWith("multidex")) {
                details.useVersion '27.0.2'
            }
        }
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'com.android.support.constraint:constraint-layout:1.0.2'
    implementation project(':baseadapter-recyclerview')
    implementation 'com.android.support:design:27.0.2'
    implementation 'com.jakewharton:butterknife:8.8.1'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.8.1'
    implementation 'com.flyco.banner:FlycoBanner_Lib:2.0.2@aar'
    implementation 'com.nineoldandroids:library:2.4.0'
    implementation 'com.github.bumptech.glide:glide:3.7.0'
    implementation 'com.scwang.smartrefresh:SmartRefreshLayout:1.0.5.1'
    implementation 'com.scwang.smartrefresh:SmartRefreshHeader:1.0.5.1'
    //没有使用特殊Header，可以不加这行   implementation 'com.github.czy1121:loadinglayout:1.0.1'
    implementation 'com.android.support:cardview-v7:27.0.2'
    implementation 'com.github.chrisbanes:PhotoView:2.0.0'
    implementation 'com.malinskiy:superrecyclerview:1.1.4'
    implementation 'com.mikhaellopez:circularprogressbar:1.1.1'
    implementation 'pl.droidsonroids.gif:android-gif-drawable:1.2.12'
    implementation 'pub.devrel:easypermissions:1.2.0'
    implementation 'org.greenrobot:eventbus:3.0.0'
    implementation 'com.google.code.gson:gson:2.2.4'
    implementation 'com.jaeger.statusbarutil:library:1.5.1'
    implementation('com.github.bumptech.glide:okhttp3-integration:1.4.0') {
        exclude group: 'glide-parent'
    }
    // Rx
    implementation 'io.reactivex.rxjava2:rxjava:2.1.0'
    implementation 'io.reactivex.rxjava2:rxandroid:2.0.1'
    // network
    implementation 'com.squareup.retrofit2:retrofit:2.2.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.2.0'
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.2.0'
    implementation 'com.squareup.okhttp3:okhttp:3.8.1'
    implementation 'com.facebook.stetho:stetho:1.5.0'
    implementation 'com.facebook.stetho:stetho-okhttp3:1.5.0'
    implementation 'com.qmuiteam:qmui:1.1.3'
    implementation 'com.soundcloud.android:android-crop:1.0.1@aar'
    //友盟
    implementation 'com.umeng.sdk:common:1.5.0'
    implementation 'com.umeng.sdk:analytics:7.5.0'
}

def releaseTime() {
    return new Date().format("yyyy-MM-dd", TimeZone.getTimeZone("UTC"))
}


